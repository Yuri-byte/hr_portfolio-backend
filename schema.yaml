openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/contact-info/:
    get:
      operationId: contact_info_list
      tags:
      - contact-info
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactInfo'
          description: ''
    post:
      operationId: contact_info_create
      tags:
      - contact-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactInfo'
          description: ''
  /api/contact-info/{id}/:
    get:
      operationId: contact_info_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact info.
        required: true
      tags:
      - contact-info
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactInfo'
          description: ''
    put:
      operationId: contact_info_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact info.
        required: true
      tags:
      - contact-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactInfo'
          description: ''
    patch:
      operationId: contact_info_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact info.
        required: true
      tags:
      - contact-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContactInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContactInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContactInfo'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactInfo'
          description: ''
    delete:
      operationId: contact_info_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact info.
        required: true
      tags:
      - contact-info
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/employees/:
    get:
      operationId: employees_list
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
          description: ''
    post:
      operationId: employees_create
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/employees/{id}/:
    get:
      operationId: employees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: employees_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: employees_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: employees_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - employees
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/role-history/:
    get:
      operationId: role_history_list
      tags:
      - role-history
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeRoleHistory'
          description: ''
    post:
      operationId: role_history_create
      tags:
      - role-history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRoleHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRoleHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRoleHistory'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRoleHistory'
          description: ''
  /api/role-history/{id}/:
    get:
      operationId: role_history_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee role history.
        required: true
      tags:
      - role-history
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRoleHistory'
          description: ''
    put:
      operationId: role_history_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee role history.
        required: true
      tags:
      - role-history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRoleHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRoleHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRoleHistory'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRoleHistory'
          description: ''
    patch:
      operationId: role_history_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee role history.
        required: true
      tags:
      - role-history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRoleHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRoleHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRoleHistory'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRoleHistory'
          description: ''
    delete:
      operationId: role_history_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee role history.
        required: true
      tags:
      - role-history
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/roles/:
    get:
      operationId: roles_list
      tags:
      - roles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
          description: ''
    post:
      operationId: roles_create
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/roles/{id}/:
    get:
      operationId: roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - roles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - roles
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    ContactInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          nullable: true
          maxLength: 100
      required:
      - id
    Employee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        contact_info:
          type: string
        role:
          type: string
        manager:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        date_joined:
          type: string
          format: date
        last_promotion_date:
          type: string
          format: date
          nullable: true
        salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - contact_info
      - date_joined
      - first_name
      - id
      - last_name
      - manager
      - role
      - status
    EmployeeRoleHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        employee:
          type: integer
        role:
          type: integer
      required:
      - employee
      - id
      - role
      - start_date
    PatchedContactInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          nullable: true
          maxLength: 100
    PatchedEmployee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        contact_info:
          type: string
        role:
          type: string
        manager:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        date_joined:
          type: string
          format: date
        last_promotion_date:
          type: string
          format: date
          nullable: true
        salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
    PatchedEmployeeRoleHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        employee:
          type: integer
        role:
          type: integer
    PatchedRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 50
        rank:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Lower numbers are higher in the hierarchy (e.g., CEO=1)
        description:
          type: string
          nullable: true
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 50
        rank:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Lower numbers are higher in the hierarchy (e.g., CEO=1)
        description:
          type: string
          nullable: true
      required:
      - id
      - rank
      - title
    StatusEnum:
      enum:
      - active
      - on_leave
      - terminated
      type: string
      description: |-
        * `active` - Active
        * `on_leave` - On Leave
        * `terminated` - Terminated
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
